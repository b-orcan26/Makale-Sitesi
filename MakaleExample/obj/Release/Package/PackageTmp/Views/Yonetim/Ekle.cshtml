@using MakaleExample.ViewModels
@model CreateViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <title>Ekle</title>
</head>
<body>
    <div class="container">


        <div class="col-9 mx-auto" style="border:2px solid black;">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Makale</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <textarea name="makale_icerik" id="makale_icerik" cols="30" rows="10"></textarea>
                    <input name="image" type="file" id="upload" hidden class="hidden" onchange="">

                </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.makale_baslik, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.makale_baslik, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.makale_baslik, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.kategori_id, "kategori_id", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.kategori_id, new SelectList(Model.Kategoris, "Value", "Text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.kategori_id, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.tarih, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.tarih ,new { htmlAttributes = new { @class = "form-control"} })
                            @Html.ValidationMessageFor(model => model.tarih, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <center><input type="submit" value="Kaydet" class="btn btn-success" /></center>
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Panele Dön", "Panel")
            </div>
        </div>
    </div>
</body>
</html>















<script src="https://static.codepen.io/assets/common/stopExecutionOnTimeout-157cd5b220a5c80d4ff8e0e70ac069bffd87a61252088146915e8726e5d9f147.js"></script>
<script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
<script src='https://tinymce.cachefly.net/4.2/tinymce.min.js'></script>
<script id="rendered-js">
    $(document).ready(function () {
        tinymce.init({
            selector: "textarea",
            theme: "modern",
            paste_data_images: true,
            plugins: [
                "advlist autolink lists link image charmap print preview hr anchor pagebreak",
                "searchreplace wordcount visualblocks visualchars code fullscreen",
                "insertdatetime media nonbreaking save table contextmenu directionality",
                "emoticons template paste textcolor colorpicker textpattern"],

            toolbar1: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
            toolbar2: "print preview media | forecolor backcolor emoticons",
            image_advtab: true,
            file_picker_callback: function (callback, value, meta) {
                if (meta.filetype == 'image') {
                    $('#upload').trigger('click');
                    $('#upload').on('change', function () {
                        var file = this.files[0];
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            callback(e.target.result, {
                                alt: ''
                            });

                        };
                        reader.readAsDataURL(file);
                    });
                }
            },
            templates: [{
                title: 'Test template 1',
                content: 'Test 1'
            },
            {
                title: 'Test template 2',
                content: 'Test 2'
            }]
        });


    });
//# sourceURL=pen.js
</script>

